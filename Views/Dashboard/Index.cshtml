@{
    ViewData["Title"] = "Dashboard";
}

<link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />

<div class="dashboard-header">
    <div>
        <h1 class="dashboard-title">Chào mừng trở lại! </h1>
        <p style="color: #94a3b8; margin-top: 8px;">Đây là tổng quan về cửa hàng của bạn</p>
    </div>
    <div class="date-range-selector">
        <button class="date-btn">Hôm nay</button>
        <button class="date-btn active">Tuần này</button>
        <button class="date-btn">Tháng này</button>
        <button class="date-btn"><i class="fas fa-calendar"></i></button>
    </div>
</div>

<!-- Stats Cards -->
<div class="stats-grid">
    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <div class="stat-label">Tổng doanh thu</div>
                <div class="stat-value">
                    @{
                        decimal totalRevenue = (decimal)ViewBag.TotalRevenue;
                        if (totalRevenue >= 1000000000) // >= 1 tỷ
                        {
                            <text>@((totalRevenue / 1000000000).ToString("0.##"))B₫</text>
                        }
                        else if (totalRevenue >= 1000000) // >= 1 triệu
                        {
                            <text>@((totalRevenue / 1000000).ToString("0.##"))M₫</text>
                        }
                        else
                        {
                            <text>@totalRevenue.ToString("#,##0")₫</text>
                        }
                    }
                </div>
                <span class="stat-change positive">
                    <i class="fas fa-arrow-up"></i> 
                    @{
                        var revenueChange = ViewBag.MonthRevenue > 0 && ViewBag.TotalRevenue > 0 
                            ? ((decimal)ViewBag.MonthRevenue / (decimal)ViewBag.TotalRevenue * 100).ToString("0.#") 
                            : "0";
                    }
                    @revenueChange%
                </span>
            </div>
            <div class="stat-icon purple">
                <i class="fas fa-dollar-sign"></i>
            </div>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <div class="stat-label">Tổng đơn hàng</div>
                <div class="stat-value">@ViewBag.TotalOrders</div>
                <span class="stat-change positive">
                    <i class="fas fa-arrow-up"></i> 0%
                </span>
            </div>
            <div class="stat-icon orange">
                <i class="fas fa-shopping-cart"></i>
            </div>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <div class="stat-label">Tổng sản phẩm</div>
                <div class="stat-value">
                    @{
                        int totalProducts = (int)ViewBag.TotalProducts;
                        if (totalProducts >= 1000000) // >= 1 triệu
                        {
                            <text>@((totalProducts / 1000000.0).ToString("0.##"))M</text>
                        }
                        else if (totalProducts >= 1000) // >= 1 nghìn
                        {
                            <text>@((totalProducts / 1000.0).ToString("0.##"))K</text>
                        }
                        else
                        {
                            <text>@totalProducts</text>
                        }
                    }
                </div>
                <span class="stat-change positive">
                    <i class="fas fa-arrow-up"></i> 0%
                </span>
            </div>
            <div class="stat-icon green">
                <i class="fas fa-box"></i>
            </div>
        </div>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <div class="stat-label">Tổng khách hàng</div>
                <div class="stat-value">@ViewBag.TotalCustomers</div>
                <span class="stat-change positive">
                    <i class="fas fa-arrow-up"></i> 0%
                </span>
            </div>
            <div class="stat-icon blue">
                <i class="fas fa-users"></i>
            </div>
        </div>
    </div>
</div>

<!-- Main Grid: Revenue Chart + Sales by Category -->
<div class="main-grid">
    <div class="chart-card">
        <div class="chart-header">
            <div>
                <h3 class="chart-title">Doanh thu</h3>
                <p class="chart-subtitle">Biểu đồ doanh thu theo tháng</p>
            </div>
            <div class="date-range-selector">
                <button class="date-btn active">6 tháng</button>
                <button class="date-btn">1 năm</button>
            </div>
        </div>
        <div class="chart-container">
            <canvas id="revenueChart"></canvas>
        </div>
    </div>

    <div class="chart-card">
        <div class="chart-header">
            <div>
                <h3 class="chart-title">Doanh số theo danh mục</h3>
                <p class="chart-subtitle">Phân bố doanh số</p>
            </div>
        </div>
        <div class="category-chart-container">
            <canvas id="categoryChart"></canvas>
        </div>
        <div class="category-legend">
            <div class="legend-item">
                <div class="legend-label">
                    <div class="legend-dot" style="background: #4E5FFF;"></div>
                    <div class="legend-name">Đồ uống</div>
                </div>
                <div class="legend-value">42%</div>
            </div>
            <div class="legend-item">
                <div class="legend-label">
                    <div class="legend-dot" style="background: #f59e0b;"></div>
                    <div class="legend-name">Thực phẩm</div>
                </div>
                <div class="legend-value">28%</div>
            </div>
            <div class="legend-item">
                <div class="legend-label">
                    <div class="legend-dot" style="background: #10b981;"></div>
                    <div class="legend-name">Snack</div>
                </div>
                <div class="legend-value">18%</div>
            </div>
            <div class="legend-item">
                <div class="legend-label">
                    <div class="legend-dot" style="background: #ef4444;"></div>
                    <div class="legend-name">Khác</div>
                </div>
                <div class="legend-value">12%</div>
            </div>
        </div>
    </div>
</div>

<!-- Order Status Tabs -->
<div class="order-tabs">
    <div class="order-tab pending active">
        <div class="order-tab-count">@(ViewBag.PendingOrders ?? 0)</div>
        <div class="order-tab-label">Chờ xử lý</div>
    </div>
    <div class="order-tab processing">
        <div class="order-tab-count">@(ViewBag.ProcessingOrders ?? 0)</div>
        <div class="order-tab-label">Đang xử lý</div>
    </div>
    <div class="order-tab shipped">
        <div class="order-tab-count">@(ViewBag.ShippedOrders ?? 0)</div>
        <div class="order-tab-label">Đã giao</div>
    </div>
    <div class="order-tab delivered">
        <div class="order-tab-count">@(ViewBag.PaidOrders ?? 0)</div>
        <div class="order-tab-label">Hoàn thành</div>
    </div>
</div>

<!-- Orders Table -->
<div class="orders-table-container">
    <div class="table-header">
        <div>
            <h3 class="chart-title">Đơn hàng gần đây</h3>
            <p class="chart-subtitle">Danh sách đơn hàng mới nhất</p>
        </div>
        <div class="d-flex gap-2 align-items-center">
            <div class="search-box">
                <i class="fas fa-search"></i>
                <input type="text" placeholder="Tìm kiếm đơn hàng...">
            </div>
            <a href="@Url.Action("Create", "Orders")" class="btn btn-primary">
                <i class="fas fa-plus"></i> Tạo đơn hàng
            </a>
        </div>
    </div>

    <table class="data-table">
        <thead>
            <tr>
                <th><input type="checkbox"></th>
                <th>Mã đơn</th>
                <th>Khách hàng</th>
                <th>Sản phẩm</th>
                <th>Ngày đặt</th>
                <th>Tổng tiền</th>
                <th>Trạng thái</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @if (ViewBag.RecentOrders != null && ((IEnumerable<QuanLyCuaHangBanLe.Models.Order>)ViewBag.RecentOrders).Any())
            {
                @foreach (QuanLyCuaHangBanLe.Models.Order order in ViewBag.RecentOrders)
                {
                    <tr>
                        <td><input type="checkbox"></td>
                        <td><strong>#@order.OrderId</strong></td>
                        <td>@(order.Customer?.Name ?? "Khách lẻ")</td>
                        <td>
                            @if (order.OrderItems != null && order.OrderItems.Any())
                            {
                                var productNames = new List<string>();
                                foreach (var item in order.OrderItems.Take(2))
                                {
                                    if (item.Product != null && !string.IsNullOrEmpty(item.Product.ProductName))
                                    {
                                        productNames.Add(item.Product.ProductName);
                                    }
                                }
                                
                                if (productNames.Any())
                                {
                                    @string.Join(", ", productNames)
                                    if (order.OrderItems.Count > 2)
                                    {
                                        <text>, ...</text>
                                    }
                                }
                                else
                                {
                                    <text>-</text>
                                }
                            }
                            else
                            {
                                <text>-</text>
                            }
                        </td>
                        <td>@order.OrderDate.ToString("dd/MM/yyyy")</td>
                        <td><strong>@order.TotalAmount.ToString("#,##0")₫</strong></td>
                        <td>
                            @{
                                var statusClass = order.Status switch
                                {
                                    "paid" => "paid",
                                    "pending" => "pending",
                                    "cancelled" => "cancelled",
                                    _ => "pending"
                                };
                                var statusText = order.Status switch
                                {
                                    "paid" => "Đã thanh toán",
                                    "pending" => "Chờ xử lý",
                                    "cancelled" => "Đã hủy",
                                    _ => "Chờ xử lý"
                                };
                            }
                            <span class="status-badge @statusClass">@statusText</span>
                        </td>
                        <td>
                            <div class="actions">
                                <a href="@Url.Action("Details", "Orders", new { id = order.OrderId })" class="action-btn" title="Xem chi tiết">
                                    <i class="fas fa-eye"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="8" style="text-align: center; padding: 40px; color: #94a3b8;">
                        <i class="fas fa-inbox" style="font-size: 3rem; margin-bottom: 16px; display: block;"></i>
                        Chưa có đơn hàng nào
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Revenue Chart
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        const revenueChart = new Chart(revenueCtx, {
            type: 'bar',
            data: {
                labels: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6'],
                datasets: [{
                    label: 'Doanh thu',
                    data: [45000, 52000, 48000, 65000, 70000, 85000],
                    backgroundColor: function(context) {
                        const chart = context.chart;
                        const {ctx, chartArea} = chart;
                        if (!chartArea) return;
                        const gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);
                        gradient.addColorStop(0, 'rgba(78, 95, 255, 0.5)');
                        gradient.addColorStop(1, 'rgba(118, 75, 162, 0.8)');
                        return gradient;
                    },
                    borderRadius: 10,
                    borderSkipped: false,
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: '#f1f5f9',
                            drawBorder: false
                        },
                        ticks: {
                            color: '#94a3b8'
                        }
                    },
                    x: {
                        grid: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            color: '#94a3b8'
                        }
                    }
                }
            }
        });

        // Category Chart (Donut)
        const categoryCtx = document.getElementById('categoryChart').getContext('2d');
        const categoryChart = new Chart(categoryCtx, {
            type: 'doughnut',
            data: {
                labels: ['Đồ uống', 'Thực phẩm', 'Snack', 'Khác'],
                datasets: [{
                    data: [42, 28, 18, 12],
                    backgroundColor: [
                        '#4E5FFF',
                        '#f59e0b',
                        '#10b981',
                        '#ef4444'
                    ],
                    borderWidth: 0,
                    cutout: '70%'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });

        // Order tabs interaction
        document.querySelectorAll('.order-tab').forEach(tab => {
            tab.addEventListener('click', function() {
                document.querySelectorAll('.order-tab').forEach(t => t.classList.remove('active'));
                this.classList.add('active');
            });
        });

        // Date range selector
        document.querySelectorAll('.date-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                if (!this.querySelector('i')) {
                    const parent = this.closest('.date-range-selector');
                    parent.querySelectorAll('.date-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                }
            });
        });
    </script>
}
