@model IEnumerable<QuanLyCuaHangBanLe.Models.Customer>

@{
    ViewData["Title"] = "Qu·∫£n l√Ω kh√°ch h√†ng";
}

<style>
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }

    .btn-primary {
        padding: 12px 24px;
        background: #1a1a1a;
        color: white;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        cursor: pointer;
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .btn-primary:hover {
        background: #000000;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        color: white;
    }

    .customers-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        border: 1px solid #e5e5e5;
    }

    .customers-header {
        padding: 20px 25px;
        border-bottom: 1px solid #e5e5e5;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .search-input {
        padding: 10px 15px;
        border: 1px solid #e5e5e5;
        border-radius: 8px;
        width: 300px;
        font-size: 0.9rem;
        background: #fafafa;
    }

    .search-input:focus {
        outline: none;
        border-color: #1a1a1a;
        background: white;
        box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.05);
    }

    .customers-table {
        width: 100%;
        border-collapse: collapse;
    }

    .customers-table thead {
        background: #fafafa;
    }

    .customers-table th {
        padding: 15px 20px;
        text-align: left;
        font-weight: 600;
        color: #666666;
        font-size: 0.85rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border-bottom: 1px solid #e5e5e5;
    }

    .customers-table td {
        padding: 18px 20px;
        border-bottom: 1px solid #f5f5f5;
        color: #1a1a1a;
        font-size: 0.95rem;
    }

    .customers-table tbody tr {
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .customers-table tbody tr:hover {
        background: #fafafa;
    }

    .customer-name {
        font-weight: 600;
        color: #1a1a1a;
    }

    .customer-email {
        color: #666666;
        font-size: 0.85rem;
    }

    .actions {
        display: flex;
        gap: 10px;
    }

    .btn-action {
        padding: 8px 16px;
        border-radius: 8px;
        border: none;
        font-size: 0.85rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-block;
    }

    .btn-edit {
        background: #bee3f8;
        color: #2c5282;
    }

    .btn-edit:hover {
        background: #90cdf4;
    }

    .btn-delete {
        background: #fed7d7;
        color: #c53030;
    }

    .btn-delete:hover {
        background: #fc8181;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #a0aec0;
    }

    .empty-state-icon {
        font-size: 4rem;
        margin-bottom: 20px;
    }

    /* Pagination Styles */
    .pagination-container {
        padding: 20px 25px;
        border-top: 1px solid #e5e5e5;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .pagination-info {
        color: #666666;
        font-size: 0.9rem;
    }

    .pagination {
        display: flex;
        gap: 8px;
        list-style: none;
        margin: 0;
        padding: 0;
    }

    .page-item {
        display: inline-block;
    }

    .page-link {
        padding: 8px 14px;
        border: 1px solid #e5e5e5;
        border-radius: 6px;
        color: #1a1a1a;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.2s ease;
        background: white;
        display: inline-block;
        min-width: 40px;
        text-align: center;
    }

    .page-link:hover {
        background: #fafafa;
        border-color: #1a1a1a;
    }

    .page-item.active .page-link {
        background: #1a1a1a;
        color: white;
        border-color: #1a1a1a;
    }

    .page-item.disabled .page-link {
        color: #cccccc;
        cursor: not-allowed;
        background: #fafafa;
    }

    .page-item.disabled .page-link:hover {
        background: #fafafa;
        border-color: #e5e5e5;
    }
</style>

<div class="page-header">
    <div>
        <h1>üë• Qu·∫£n l√Ω kh√°ch h√†ng</h1>
        <p style="color: #718096; margin-top: 5px;">Qu·∫£n l√Ω th√¥ng tin kh√°ch h√†ng</p>
    </div>
    <a asp-action="Create" class="btn-primary">
        <span>‚ûï</span>
        Th√™m kh√°ch h√†ng m·ªõi
    </a>
</div>

<div class="customers-card">
    <div class="customers-header">
        <input type="text" class="search-input" placeholder="üîç T√¨m ki·∫øm kh√°ch h√†ng..." />
        <div style="color: #718096; font-size: 0.9rem;">
            T·ªïng: <strong style="color: #2d3748;">@ViewBag.TotalItems</strong> kh√°ch h√†ng
        </div>
    </div>

    @if (Model.Any())
    {
        <table class="customers-table">
            <thead>
                <tr>
                    <th>M√£ KH</th>
                    <th>T√™n kh√°ch h√†ng</th>
                    <th>S·ªë ƒëi·ªán tho·∫°i</th>
                    <th>Email</th>
                    <th>ƒê·ªãa ch·ªâ</th>
                    <th>Thao t√°c</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var customer in Model)
                {
                    <tr>
                        <td>@($"KH{customer.CustomerId:D3}")</td>
                        <td>
                            <div class="customer-name">@customer.Name</div>
                        </td>
                        <td>@customer.Phone</td>
                        <td>
                            <div class="customer-email">@customer.Email</div>
                        </td>
                        <td>@customer.Address</td>
                        <td>
                            <div class="actions">
                                <a asp-action="Edit" asp-route-id="@customer.CustomerId" class="btn-action btn-edit">‚úèÔ∏è S·ª≠a</a>
                                <a asp-action="Delete" asp-route-id="@customer.CustomerId" 
                                   class="btn-action btn-delete">üóëÔ∏è X√≥a</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="empty-state">
            <div class="empty-state-icon">üë•</div>
            <div>Ch∆∞a c√≥ kh√°ch h√†ng n√†o</div>
        </div>
    }

    @if (ViewBag.TotalPages > 1)
    {
        <div class="pagination-container">
            <div class="pagination-info">
                Hi·ªÉn th·ªã @((ViewBag.CurrentPage - 1) * 10 + 1) - @(Math.Min(ViewBag.CurrentPage * 10, ViewBag.TotalItems)) trong t·ªïng s·ªë @ViewBag.TotalItems kh√°ch h√†ng
            </div>
            <ul class="pagination">
                <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)">‚Äπ Tr∆∞·ªõc</a>
                </li>

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }

                <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)">Sau ‚Ä∫</a>
                </li>
            </ul>
        </div>
    }
</div>

<script>
    // Real-time search cho kh√°ch h√†ng
    document.querySelector('.search-input').addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase().trim();
        const rows = document.querySelectorAll('.customers-table tbody tr');
        let visibleCount = 0;

        rows.forEach(row => {
            const cells = row.querySelectorAll('td');
            const name = cells[0]?.textContent.toLowerCase() || '';
            const phone = cells[1]?.textContent.toLowerCase() || '';
            const email = cells[2]?.textContent.toLowerCase() || '';
            const address = cells[3]?.textContent.toLowerCase() || '';
            
            if (name.includes(searchTerm) || phone.includes(searchTerm) || 
                email.includes(searchTerm) || address.includes(searchTerm)) {
                row.style.display = '';
                visibleCount++;
            } else {
                row.style.display = 'none';
            }
        });

        // Hi·ªÉn th·ªã th√¥ng b√°o n·∫øu kh√¥ng t√¨m th·∫•y
        const table = document.querySelector('.customers-table');
        const pagination = document.querySelector('.pagination-container');
        
        if (visibleCount === 0 && searchTerm !== '') {
            if (table) table.style.display = 'none';
            if (pagination) pagination.style.display = 'none';
            
            let emptyState = document.querySelector('.empty-search-state');
            if (!emptyState) {
                emptyState = document.createElement('div');
                emptyState.className = 'empty-search-state';
                emptyState.style.cssText = 'text-align: center; padding: 60px 20px;';
                emptyState.innerHTML = `
                    <div style="font-size: 3rem; margin-bottom: 20px;">üîç</div>
                    <div style="font-size: 1.2rem; font-weight: 600; color: #1a1a1a; margin-bottom: 10px;">Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng</div>
                    <p style="color: #666;">Kh√¥ng c√≥ kh√°ch h√†ng n√†o kh·ªõp v·ªõi t·ª´ kh√≥a "${searchTerm}"</p>
                `;
                document.querySelector('.customers-card').appendChild(emptyState);
            }
        } else {
            if (table) table.style.display = '';
            if (pagination) pagination.style.display = searchTerm === '' ? '' : 'none';
            
            const emptyState = document.querySelector('.empty-search-state');
            if (emptyState) emptyState.remove();
        }
    });
</script>
