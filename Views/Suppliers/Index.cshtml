@model IEnumerable<QuanLyCuaHangBanLe.Models.Supplier>

@{
    ViewData["Title"] = "Qu·∫£n l√Ω nh√† cung c·∫•p";
}

@await Html.PartialAsync("_AlertMessages")

<style>
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }

    .btn-primary {
        padding: 12px 24px;
        background: #4E5FFF;
        color: white;
        border: none;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .btn-primary:hover {
        background: #4E5FFF;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        color: white;
    }

    .suppliers-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        border: 1px solid #e5e5e5;
    }

    .suppliers-table {
        width: 100%;
        border-collapse: collapse;
    }

    .suppliers-table thead {
        background: #fafafa;
    }

    .suppliers-table th {
        padding: 15px 20px;
        text-align: left;
        font-weight: 600;
        color: #666666;
        font-size: 0.85rem;
        text-transform: uppercase;
        border-bottom: 1px solid #e5e5e5;
    }

    .suppliers-table td {
        padding: 18px 20px;
        border-bottom: 1px solid #f5f5f5;
        color: #1a1a1a;
    }

    .suppliers-table tbody tr:hover {
        background: #fafafa;
    }

    .supplier-name {
        font-weight: 600;
        color: #1a1a1a;
    }

    .actions {
        display: flex;
        gap: 10px;
    }

    .btn-action {
        padding: 8px 16px;
        border-radius: 8px;
        border: none;
        font-size: 0.85rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-block;
    }

    .btn-edit {
        background: var(--color-info-bg) !important;
        color: #2c5282 !important;
        border: 2px solid transparent !important;
    }

    .btn-edit:hover {
        background: #ffffff !important;
        border: 2px solid #2c5282 !important;
        color: #2c5282 !important;
    }

    .btn-delete {
        background: var(--color-error-bg) !important;
        color: #c53030 !important;
        border: 2px solid transparent !important;
    }

    .btn-delete:hover {
        background: #ffffff !important;
        border: 2px solid #c53030 !important;
        color: #c53030 !important;
    }
</style>

<div class="page-header">
    <div>
        <h1>üè≠ Qu·∫£n l√Ω nh√† cung c·∫•p</h1>
        <p style="color: #718096; margin-top: 5px;">Qu·∫£n l√Ω th√¥ng tin nh√† cung c·∫•p</p>
    </div>
    <a asp-action="Create" class="btn-primary">
        <i class="fas fa-plus"></i>
        Th√™m nh√† cung c·∫•p
    </a>
</div>

<div class="suppliers-card">
    <div class="suppliers-header" style="padding: 20px 25px; border-bottom: 1px solid #e5e5e5; display: flex; justify-content: space-between; align-items: center;">
        <form asp-action="Index" method="get" style="margin: 0; flex: 1;">
            <input type="text" name="searchTerm" class="search-input" placeholder="üîç T√¨m ki·∫øm nh√† cung c·∫•p..." value="@ViewBag.SearchTerm" style="padding: 10px 15px; border: 1px solid #e5e5e5; border-radius: 8px; width: 400px; font-size: 0.9rem; background: #fafafa;" />
            <input type="hidden" name="page" value="1" />
        </form>
        <div style="color: #718096; font-size: 0.9rem;">
            T·ªïng: <strong style="color: #2d3748;">@ViewBag.TotalItems</strong> nh√† cung c·∫•p
        </div>
    </div>
    @if (Model.Any())
    {
        <table class="suppliers-table">
            <thead>
                <tr>
                    <th>M√£ NCC</th>
                    <th>T√™n nh√† cung c·∫•p</th>
                    <th>S·ªë ƒëi·ªán tho·∫°i</th>
                    <th>Email</th>
                    <th>ƒê·ªãa ch·ªâ</th>
                    <th>Thao t√°c</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var supplier in Model)
                {
                    <tr>
                        <td>@($"NCC{supplier.SupplierId:D3}")</td>
                        <td>
                            <div class="supplier-name">@supplier.Name</div>
                        </td>
                        <td>@supplier.Phone</td>
                        <td>@supplier.Email</td>
                        <td>@supplier.Address</td>
                        <td>
                            <div class="actions">
                                <a asp-action="Edit" asp-route-id="@supplier.SupplierId" class="btn-action btn-edit">‚úèÔ∏è S·ª≠a</a>
                                <button type="button" class="btn-action btn-delete" onclick="deleteSupplier(@supplier.SupplierId, '@supplier.Name')">üóëÔ∏è X√≥a</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div style="text-align: center; padding: 60px 20px;">
            <div style="font-size: 4rem; margin-bottom: 20px;">üè≠</div>
            <div style="color: #a0aec0;">Ch∆∞a c√≥ nh√† cung c·∫•p n√†o</div>
        </div>
    }
</div>

@if (ViewBag.TotalPages != null && ViewBag.TotalPages > 1)
{
    <div class="pagination-container" style="display: flex; justify-content: center; align-items: center; gap: 10px; margin-top: 30px; padding: 20px;">
        @if (ViewBag.CurrentPage > 1)
        {
            <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage - 1)" asp-route-searchTerm="@ViewBag.SearchTerm" class="pagination-btn" style="padding: 10px 16px; background: #4E5FFF; color: white; border-radius: 8px; text-decoration: none; font-weight: 500; transition: all 0.3s;">‚Üê Tr∆∞·ªõc</a>
        }
        
        <div style="display: flex; gap: 5px;">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                if (i == ViewBag.CurrentPage)
                {
                    <span class="pagination-current" style="padding: 10px 16px; background: #4E5FFF; color: white; border-radius: 8px; font-weight: 600;">@i</span>
                }
                else if (i == 1 || i == ViewBag.TotalPages || (i >= ViewBag.CurrentPage - 2 && i <= ViewBag.CurrentPage + 2))
                {
                    <a asp-action="Index" asp-route-page="@i" asp-route-searchTerm="@ViewBag.SearchTerm" style="padding: 10px 16px; background: #f5f5f5; color: #1a1a1a; border-radius: 8px; text-decoration: none; transition: all 0.3s;">@i</a>
                }
                else if (i == ViewBag.CurrentPage - 3 || i == ViewBag.CurrentPage + 3)
                {
                    <span style="padding: 10px 16px;">...</span>
                }
            }
        </div>
        
        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <a asp-action="Index" asp-route-page="@(ViewBag.CurrentPage + 1)" asp-route-searchTerm="@ViewBag.SearchTerm" class="pagination-btn" style="padding: 10px 16px; background: #4E5FFF; color: white; border-radius: 8px; text-decoration: none; font-weight: 500; transition: all 0.3s;">Sau ‚Üí</a>
        }
    </div>
}

<script>
    // Auto-submit search form khi g√µ (v·ªõi debounce)
    let searchTimeout;
    document.querySelector('.search-input')?.addEventListener('input', function(e) {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            e.target.closest('form').submit();
        }, 500); // ƒê·ª£i 500ms sau khi ng∆∞·ªùi d√πng ng·ª´ng g√µ
    });

    // Function x√≥a nh√† cung c·∫•p
    function deleteSupplier(id, name) {
        if (confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a nh√† cung c·∫•p "${name}"?`)) {
            fetch(`/Suppliers/Delete/${id}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert(data.message);
                    location.reload();
                } else {
                    alert(data.message || 'C√≥ l·ªói x·∫£y ra khi x√≥a nh√† cung c·∫•p');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('C√≥ l·ªói x·∫£y ra khi x√≥a nh√† cung c·∫•p');
            });
        }
    }
</script>
