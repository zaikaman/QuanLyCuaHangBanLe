@{
    ViewData["Title"] = "ƒê·ªïi m·∫≠t kh·∫©u";
}

<link rel="stylesheet" href="~/css/form-pages.css" asp-append-version="true" />

<div class="form-container">
    <div class="breadcrumb">
        <a asp-controller="Dashboard" asp-action="Index">üè† Dashboard</a> <span>/</span> <span class="current">üîê ƒê·ªïi m·∫≠t kh·∫©u</span>
    </div>

    <div class="page-header">
        <h1 class="page-title">üîê ƒê·ªïi m·∫≠t kh·∫©u</h1>
        <p class="page-description">Thay ƒë·ªïi m·∫≠t kh·∫©u ƒëƒÉng nh·∫≠p c·ªßa b·∫°n</p>
    </div>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible">
            <i class="fa-solid fa-circle-exclamation"></i>
            <strong>L·ªói!</strong> @TempData["Error"]
            <button type="button" class="alert-close" onclick="this.parentElement.remove()">√ó</button>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible">
            <i class="fa-solid fa-circle-check"></i>
            <strong>Th√†nh c√¥ng!</strong> @TempData["Success"]
            <button type="button" class="alert-close" onclick="this.parentElement.remove()">√ó</button>
        </div>
    }

    <div class="form-card">
        <form asp-action="ChangePassword" method="post">
            @Html.AntiForgeryToken()
            
            <div class="form-row">
                <div class="form-group">
                    <label for="oldPassword">
                        <i class="fa-solid fa-lock"></i>
                        M·∫≠t kh·∫©u c≈© <span class="required">*</span>
                    </label>
                    <input type="password" 
                           class="form-control" 
                           id="oldPassword" 
                           name="oldPassword" 
                           placeholder="Nh·∫≠p m·∫≠t kh·∫©u hi·ªán t·∫°i" 
                           required />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="newPassword">
                        <i class="fa-solid fa-key"></i>
                        M·∫≠t kh·∫©u m·ªõi <span class="required">*</span>
                    </label>
                    <input type="password" 
                           class="form-control" 
                           id="newPassword" 
                           name="newPassword" 
                           placeholder="Nh·∫≠p m·∫≠t kh·∫©u m·ªõi (t·ªëi thi·ªÉu 6 k√Ω t·ª±)" 
                           required 
                           minlength="6" />
                    <small class="form-text">M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±</small>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="confirmPassword">
                        <i class="fa-solid fa-check-double"></i>
                        X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi <span class="required">*</span>
                    </label>
                    <input type="password" 
                           class="form-control" 
                           id="confirmPassword" 
                           name="confirmPassword" 
                           placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi" 
                           required />
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">
                    <i class="fa-solid fa-check"></i>
                    ƒê·ªïi m·∫≠t kh·∫©u
                </button>
                <a asp-controller="Dashboard" asp-action="Index" class="btn btn-secondary">
                    <i class="fa-solid fa-times"></i>
                    H·ªßy
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <style>
        .alert {
            animation: slideInDown 0.3s ease-out;
            position: relative;
            margin-bottom: 20px;
        }

        .alert-dismissible {
            padding-right: 50px;
        }

        .alert-close {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            background: transparent;
            border: none;
            font-size: 24px;
            cursor: pointer;
            opacity: 0.7;
            color: inherit;
            padding: 0;
            width: 30px;
            height: 30px;
            line-height: 1;
        }

        .alert-close:hover {
            opacity: 1;
        }

        @@keyframes slideInDown {
            from {
                transform: translateY(-20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }
    </style>
    <script>
        // T·ª± ƒë·ªông ·∫©n th√¥ng b√°o sau 5 gi√¢y
        setTimeout(function() {
            var alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                if (alert) {
                    alert.style.transition = 'opacity 0.5s ease';
                    alert.style.opacity = '0';
                    setTimeout(function() {
                        alert.remove();
                    }, 500);
                }
            });
        }, 5000);

        // Ki·ªÉm tra m·∫≠t kh·∫©u kh·ªõp nhau
        document.querySelector('form').addEventListener('submit', function(e) {
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (newPassword !== confirmPassword) {
                e.preventDefault();
                alert('M·∫≠t kh·∫©u m·ªõi v√† x√°c nh·∫≠n m·∫≠t kh·∫©u kh√¥ng kh·ªõp!');
                return false;
            }
            
            if (newPassword.length < 6) {
                e.preventDefault();
                alert('M·∫≠t kh·∫©u m·ªõi ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±!');
                return false;
            }
        });

        // Toggle hi·ªÉn th·ªã m·∫≠t kh·∫©u (optional)
        const passwordFields = document.querySelectorAll('input[type="password"]');
        passwordFields.forEach(field => {
            const wrapper = field.parentElement;
            const toggleBtn = document.createElement('button');
            toggleBtn.type = 'button';
            toggleBtn.className = 'toggle-password';
            toggleBtn.innerHTML = '<i class="fa-solid fa-eye"></i>';
            toggleBtn.style.cssText = 'position: absolute; right: 10px; top: 38px; background: none; border: none; cursor: pointer; color: #6c757d;';
            
            toggleBtn.addEventListener('click', function() {
                if (field.type === 'password') {
                    field.type = 'text';
                    toggleBtn.innerHTML = '<i class="fa-solid fa-eye-slash"></i>';
                } else {
                    field.type = 'password';
                    toggleBtn.innerHTML = '<i class="fa-solid fa-eye"></i>';
                }
            });
            
            wrapper.style.position = 'relative';
            wrapper.appendChild(toggleBtn);
        });
    </script>
}
