@model QuanLyCuaHangBanLe.Models.Order

@{
    ViewData["Title"] = "Chi ti·∫øt ƒë∆°n h√†ng";
}

<style>
    .details-container {
        max-width: 1200px;
        margin: 0 auto;
    }

    .details-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
        padding: 30px;
        border: 1px solid #e5e5e5;
        margin-bottom: 20px;
    }

    .details-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 2px solid #f5f5f5;
    }

    .details-header h2 {
        font-size: 1.3rem;
        font-weight: 600;
        color: #1a1a1a;
        margin: 0;
    }

    .status-badge {
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.85rem;
    }

    .status-pending {
        background: #dbeafe;
        color: #1e40af;
    }

    .status-paid {
        background: #d1fae5;
        color: #065f46;
    }

    .status-canceled {
        background: #fee2e2;
        color: #991b1b;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
        margin-bottom: 30px;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .info-label {
        font-weight: 600;
        color: #666666;
        font-size: 0.85rem;
    }

    .info-value {
        color: #1a1a1a;
        font-size: 1rem;
    }

    .items-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
    }

    .items-table th {
        background: #fafafa;
        padding: 12px;
        text-align: left;
        font-weight: 600;
        font-size: 0.85rem;
        color: #666666;
        border-bottom: 2px solid #e5e5e5;
    }

    .items-table td {
        padding: 12px;
        border-bottom: 1px solid #f5f5f5;
    }

    .items-table th:last-child,
    .items-table td:last-child {
        text-align: right;
    }

    .total-section {
        background: #fafafa;
        padding: 20px;
        border-radius: 8px;
        margin-top: 20px;
    }

    .total-row {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        font-size: 0.95rem;
    }

    .total-row.final {
        font-size: 1.2rem;
        font-weight: 700;
        color: #1a1a1a;
        border-top: 2px solid #e5e5e5;
        margin-top: 10px;
        padding-top: 15px;
    }

    .btn {
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.9rem;
        cursor: pointer;
        transition: all 0.2s ease;
        border: none;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .btn-back {
        background: #e5e5e5;
        color: #1a1a1a;
    }

    .btn-back:hover {
        background: #d4d4d4;
    }

    .actions-section {
        display: flex;
        gap: 15px;
        margin-top: 30px;
        padding-top: 25px;
        border-top: 2px solid #f5f5f5;
    }

    .section-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #1a1a1a;
        margin-bottom: 15px;
    }
</style>

<div class="details-container">
    <div class="details-card">
        <div class="details-header">
            <h2>üìã Chi ti·∫øt ƒë∆°n h√†ng #@Model.OrderId</h2>
            @{
                var statusClass = Model.Status switch
                {
                    "paid" => "status-paid",
                    "canceled" => "status-canceled",
                    "pending" => "status-pending",
                    _ => "status-pending"
                };
                var statusText = Model.Status switch
                {
                    "paid" => "ƒê√£ thanh to√°n",
                    "canceled" => "ƒê√£ h·ªßy",
                    "pending" => "Ch·ªù x·ª≠ l√Ω",
                    _ => Model.Status
                };
            }
            <span class="status-badge @statusClass">@statusText</span>
        </div>

        <div class="info-grid">
            <div class="info-item">
                <span class="info-label">üë§ Kh√°ch h√†ng</span>
                <span class="info-value">@(Model.Customer?.Name ?? "N/A")</span>
            </div>

            <div class="info-item">
                <span class="info-label">üìû S·ªë ƒëi·ªán tho·∫°i</span>
                <span class="info-value">@(Model.Customer?.Phone ?? "N/A")</span>
            </div>

            <div class="info-item">
                <span class="info-label">üìß Email</span>
                <span class="info-value">@(Model.Customer?.Email ?? "N/A")</span>
            </div>

            <div class="info-item">
                <span class="info-label">üìç ƒê·ªãa ch·ªâ</span>
                <span class="info-value">@(Model.Customer?.Address ?? "N/A")</span>
            </div>

            <div class="info-item">
                <span class="info-label">üìÖ Ng√†y ƒë·∫∑t h√†ng</span>
                <span class="info-value">@Model.OrderDate.ToString("dd/MM/yyyy HH:mm")</span>
            </div>

            <div class="info-item">
                <span class="info-label">üë®‚Äçüíº Nh√¢n vi√™n x·ª≠ l√Ω</span>
                <span class="info-value">@(Model.User?.Username ?? "N/A")</span>
            </div>

            @if (Model.Promotion != null)
            {
                <div class="info-item">
                    <span class="info-label">üéÅ M√£ khuy·∫øn m√£i</span>
                    <span class="info-value">@Model.Promotion.PromoCode</span>
                </div>

                <div class="info-item">
                    <span class="info-label">üí∞ Gi·∫£m gi√°</span>
                    <span class="info-value">
                        @if (Model.Promotion.DiscountType == "percent")
                        {
                            @Model.Promotion.DiscountValue<text>%</text>
                        }
                        else
                        {
                            @Model.Promotion.DiscountValue.ToString("N0")<text>ƒë</text>
                        }
                    </span>
                </div>
            }
        </div>
    </div>

    <div class="details-card">
        <div class="section-title">üì¶ S·∫£n ph·∫©m trong ƒë∆°n h√†ng</div>
        
        <table class="items-table">
            <thead>
                <tr>
                    <th>S·∫£n ph·∫©m</th>
                    <th>ƒê∆°n gi√°</th>
                    <th>S·ªë l∆∞·ª£ng</th>
                    <th>Th√†nh ti·ªÅn</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.OrderItems != null && Model.OrderItems.Any())
                {
                    foreach (var item in Model.OrderItems)
                    {
                        <tr>
                            <td>@(item.Product?.ProductName ?? "N/A")</td>
                            <td>@item.Price.ToString("N0")ƒë</td>
                            <td>@item.Quantity</td>
                            <td>@item.Subtotal.ToString("N0")ƒë</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" style="text-align: center; color: #999;">Kh√¥ng c√≥ s·∫£n ph·∫©m</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="total-section">
            <div class="total-row">
                <span>T·ªïng ti·ªÅn h√†ng:</span>
                <span>@Model.TotalAmount.ToString("N0")ƒë</span>
            </div>
            @if (Model.DiscountAmount > 0)
            {
                <div class="total-row">
                    <span>Gi·∫£m gi√°:</span>
                    <span>-@Model.DiscountAmount.ToString("N0")ƒë</span>
                </div>
            }
            <div class="total-row final">
                <span>T·ªïng thanh to√°n:</span>
                <span>@((Model.TotalAmount - Model.DiscountAmount).ToString("N0"))ƒë</span>
            </div>
        </div>
    </div>

    @if (Model.Payments != null && Model.Payments.Any())
    {
        <div class="details-card">
            <div class="section-title">üí≥ Th√¥ng tin thanh to√°n</div>
            
            <table class="items-table">
                <thead>
                    <tr>
                        <th>Ng√†y thanh to√°n</th>
                        <th>Ph∆∞∆°ng th·ª©c</th>
                        <th>S·ªë ti·ªÅn</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var payment in Model.Payments)
                    {
                        var paymentMethodText = payment.PaymentMethod switch
                        {
                            "cash" => "Ti·ªÅn m·∫∑t",
                            "card" => "Th·∫ª",
                            "bank_transfer" => "Chuy·ªÉn kho·∫£n",
                            "e-wallet" => "V√≠ ƒëi·ªán t·ª≠",
                            _ => payment.PaymentMethod
                        };
                        
                        <tr>
                            <td>@payment.PaymentDate.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@paymentMethodText</td>
                            <td>@payment.Amount.ToString("N0")ƒë</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    <div class="actions-section">
        <a asp-action="Index" class="btn btn-back">
            ‚Üê Quay l·∫°i danh s√°ch
        </a>
    </div>
</div>
